package com.model.department.dto;
// Generated May 19, 2014 1:33:27 PM by Hibernate Tools 3.2.1.GA


import com.model.doctorProcess.dto.Doctorinfo;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 * Departmentname generated by hbm2java
 */
@Entity
@Table(name="departmentname"
    ,schema="public"
)
        @SequenceGenerator(name = "departmentname_seq", sequenceName = "departmentname_seq")
@org.hibernate.annotations.Entity(dynamicUpdate=true)
public class Departmentname  implements java.io.Serializable {


     private long departmentnameid;
     private String dptname;
     private boolean usefull;
     private Set<Doctorinfo> doctorinfos = new HashSet<Doctorinfo>(0);

    public Departmentname() {
    }


    public Departmentname(long departmentnameid) {
        this.departmentnameid = departmentnameid;
    }
    public Departmentname(long departmentnameid, String dptname, Set<Doctorinfo> doctorinfos) {
       this.departmentnameid = departmentnameid;
       this.dptname = dptname;
       this.doctorinfos = doctorinfos;
    }

     @Id

    @Column(name="departmentnameid", unique=true, nullable=false)
     @GeneratedValue(generator = "departmentname_seq")
    public long getDepartmentnameid() {
        return this.departmentnameid;
    }

    public void setDepartmentnameid(long departmentnameid) {
        this.departmentnameid = departmentnameid;
    }

    @Column(name="dptname", length=150)
    public String getDptname() {
        return this.dptname;
    }

    public void setDptname(String dptname) {
        this.dptname = dptname;
    }

@Column(name="usefull", nullable=false)
    public boolean isUsefull() {
        return this.usefull;
    }

    public void setUsefull(boolean usefull) {
        this.usefull = usefull;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="departmentname")
    public Set<Doctorinfo> getDoctorinfos() {
        return this.doctorinfos;
    }

    public void setDoctorinfos(Set<Doctorinfo> doctorinfos) {
        this.doctorinfos = doctorinfos;
    }







}


