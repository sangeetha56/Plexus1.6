package com.model.medicine.dto;
// Generated May 20, 2014 6:29:07 PM by Hibernate Tools 3.2.1.GA


import com.model.company.dto.Company;
import com.model.dispense.dto.Dispense;
import com.model.dossage.dto.Dossage;
import com.model.inunitdispensedose.dto.Inunitdispensedose;
import com.model.rarelymedicine.dto.Rarelyprescribedmedicine;
import com.model.reunitdispensedose.dto.Reunitdispensedose;
import com.model.stock.dto.Stock;
import com.model.unitdispensedose.dto.Unitdispensedose;
import com.model.vendor.dto.Vendor;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.Formula;

/**
 * Medicine generated by hbm2java
 */
@Entity
@Table(name="medicine"
    ,schema="public"
)
        @SequenceGenerator(name = "medicine_seq", sequenceName = "medicine_seq")
@org.hibernate.annotations.Entity(dynamicUpdate=true)
public class Medicine  implements java.io.Serializable {


     private long id;
     private Vendor vendor;
     private Company company;
     private String name;
     private String strength;
     private String nature;
     private BigDecimal price;
     private String batchno;
     private BigDecimal unitprice;
     private String unittype;
     private String remarks;
     private long unitquantity;
     private BigDecimal vat;
     private BigDecimal cgst;
    private BigDecimal igst;
    private BigDecimal sgst;
    private BigDecimal gst;
    // private Dispense dispense;
     private Date lastaccessdate;
      private Date expirydatemedicine;
      private Boolean usable;

     private Set<Stock> stocks = new HashSet<Stock>(0);
    private Set<Dossage> dossages = new HashSet<Dossage>(0);
    private Set<Unitdispensedose> unitdispensedoses = new HashSet<Unitdispensedose>(0);
     private Set<Inunitdispensedose> inunitdispensedoses = new HashSet<Inunitdispensedose>(0);
      private Set<Reunitdispensedose> reunitdispensedoses = new HashSet<Reunitdispensedose>(0);

     private Set<Rarelyprescribedmedicine> rarelyprescribedmedicines = new HashSet<Rarelyprescribedmedicine>(0);

    public Medicine() {
    }

	
    public Medicine(long id, String name, String strength, String nature, BigDecimal price, String batchno, BigDecimal unitprice, String unittype, long unitquantity,Boolean usable) {
        this.id = id;
        this.name = name;
        this.strength = strength;
        this.nature = nature;
        this.price = price;
        this.batchno = batchno;
        this.unitprice = unitprice;
        this.unittype = unittype;
        this.unitquantity = unitquantity;
        this.usable=usable;
    }

    public Medicine(BigDecimal cgst, BigDecimal igst, BigDecimal sgst, BigDecimal gst) {
        this.cgst = cgst;
        this.igst = igst;
        this.sgst = sgst;
        this.gst = gst;
    }
    
   
     @Id 
    
    @Column(name="id", unique=true, nullable=false)
     @GeneratedValue(generator = "medicine_seq")
    public long getId() {
        return this.id;
    }
    
    public void setId(long id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="vendorid")
    public Vendor getVendor() {
        return this.vendor;
    }
    
    public void setVendor(Vendor vendor) {
        this.vendor = vendor;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="companyid")
    public Company getCompany() {
        return this.company;
    }
    
    public void setCompany(Company company) {
        this.company = company;
    }
    
    @Column(name="name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    @Column(name="strength", nullable=false, length=50)
    public String getStrength() {
        return this.strength;
    }
    
    public void setStrength(String strength) {
        this.strength = strength;
    }
    
    @Column(name="nature", nullable=false)
    public String getNature() {
        return this.nature;
    }
    
    public void setNature(String nature) {
        this.nature = nature;
    }
    
    @Column(name="price", nullable=false, precision=20)
    public BigDecimal getPrice() {
        return this.price;
    }
    
    public void setPrice(BigDecimal price) {
        this.price = price;
    }
    
    @Column(name="batchno", nullable=false, length=20)
    public String getBatchno() {
        return this.batchno;
    }
    
    public void setBatchno(String batchno) {
        this.batchno = batchno;
    }
    
    @Column(name="unitprice", nullable=false, precision=20)
    public BigDecimal getUnitprice() {
        return this.unitprice;
    }
    
    public void setUnitprice(BigDecimal unitprice) {
        this.unitprice = unitprice;
    }
    
    @Column(name="unittype", nullable=false, length=50)
    public String getUnittype() {
        return this.unittype;
    }
    
    public void setUnittype(String unittype) {
        this.unittype = unittype;
    }
    
    @Column(name="remarks")
    public String getRemarks() {
        return this.remarks;
    }
    
    public void setRemarks(String remarks) {
        this.remarks = remarks;
    }
    
    @Column(name="unitquantity", nullable=false)
    public long getUnitquantity() {
        return this.unitquantity;
    }
    
    public void setUnitquantity(long unitquantity) {
        this.unitquantity = unitquantity;
    }
    
    @Column(name="vat", precision=20)
    public BigDecimal getVat() {
        return this.vat;
    }

    public void setVat(BigDecimal vat) {
        this.vat = vat;
    }
      @Column(name="cgst", precision=20)
    public BigDecimal getCgst() {
        return this.cgst;
    }

    public void setCgst(BigDecimal cgst) {
        this.cgst = cgst;
    }

    @Column(name="igst", precision=20)
    public BigDecimal getIgst() {
        return this.igst;
    }

    public void setIgst(BigDecimal igst) {
        this.igst = igst;
    }

    @Column(name="sgst", precision=20)
    public BigDecimal getSgst() {
        return this.sgst;
    }

    public void setSgst(BigDecimal sgst) {
        this.sgst = sgst;
    }

    @Column(name="gst", precision=20)
    public BigDecimal getGst() {
        return this.gst;
    }

    public void setGst(BigDecimal gst) {
        this.gst = gst;
    }
    /**
     *
     * @return
     */
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "medicine")
    public Set<Stock> getStocks() {
        return this.stocks;
    }

    /**
     *
     * @param stocks
     */
    public void setStocks(Set<Stock> stocks) {
        this.stocks = stocks;
    }

    private long stockCount;

    /**
     *
     * @return
     */
    @Formula("(select count(o.id) from stock o where o.medicineid=id)")
    public long getStockCount() {
        return stockCount;
    }

    /**
     *
     * @param stockCount
     */
    public void setStockCount(long stockCount) {
        this.stockCount = stockCount;
    }
    /**
     *
     * @return
     */
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Dossage> getDossages() {
        return this.dossages;
    }

    /**
     *
     * @param dossages
     */
    public void setDossages(Set<Dossage> dossages) {
        this.dossages = dossages;
    }
    /**
     *
     * @return
     */
    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Unitdispensedose> getUnitdispensedoses() {
        return this.unitdispensedoses;
    }

    /**
     *
     * @param unitdispensedoses
     */
    public void setUnitdispensedoses(Set<Unitdispensedose> unitdispensedoses) {
        this.unitdispensedoses = unitdispensedoses;
    }


@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Inunitdispensedose> getInunitdispensedoses() {
        return this.inunitdispensedoses;
    }

    public void setInunitdispensedoses(Set<Inunitdispensedose> inunitdispensedoses) {
        this.inunitdispensedoses = inunitdispensedoses;
    }

    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Reunitdispensedose> getReunitdispensedoses() {
        return this.reunitdispensedoses;
    }

    /**
     *
     * @param unitdispensedoses
     */
    public void setReunitdispensedoses(Set<Reunitdispensedose> reunitdispensedoses) {
        this.reunitdispensedoses = reunitdispensedoses;
    }

    @OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="medicine")
    public Set<Rarelyprescribedmedicine> getRarelyprescribedmedicines() {
        return this.rarelyprescribedmedicines;
    }

    public void setRarelyprescribedmedicines(Set<Rarelyprescribedmedicine> rarelyprescribedmedicines) {
        this.rarelyprescribedmedicines = rarelyprescribedmedicines;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="lastaccessdate", length=13)
    public Date getLastaccessdate() {
        return this.lastaccessdate;
    }

    public void setLastaccessdate(Date lastaccessdate) {
        this.lastaccessdate = lastaccessdate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="expirydatemedicine", length=13)
    public Date getExpirydatemedicine() {
        return this.expirydatemedicine;
    }

    public void setExpirydatemedicine(Date expirydatemedicine) {
        this.expirydatemedicine = expirydatemedicine;
    }

    @Column(name="usable")
    public Boolean getUsable() {
        return this.usable;
    }

    public void setUsable(Boolean usable) {
        this.usable = usable;
    }

//    @ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name = "dispenseid", nullable = false)
//    public Dispense getDispense() {
//        return this.dispense;
//    }
//
//    /**
//     *
//     * @param dispense
//     */
//    public void setDispense(Dispense dispense) {
//        this.dispense = dispense;
//    }
//



}


