package com.model.advance.dto;
// Generated 29 Aug, 2017 10:02:09 PM by Hibernate Tools 3.2.1.GA


import com.model.advance.dtochild.Advancechildbill;
import com.model.doctorProcess.dto.Doctorinfo;
import com.model.patient.dto.Patient;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Advance generated by hbm2java
 */
@Entity
@Table(name="advance"
    ,schema="public"
)
@SequenceGenerator(name = "advance_seq", sequenceName = "advance_seq")
@org.hibernate.annotations.Entity(dynamicUpdate = true)
public class Advance  implements java.io.Serializable {


     private long advancebillid;
     private Patient patient;
     private Doctorinfo doctorinfo;
     private Date advancebilldate;
     private BigDecimal advanceamount;
     private BigDecimal totalbill;
     private BigDecimal paid;
     private BigDecimal reaminingamount;
     private Set<Advancechildbill> advancechildbills = new HashSet<Advancechildbill>(0);

    public Advance() {
    }

	
    public Advance(long advancebillid, Date advancebilldate) {
        this.advancebillid = advancebillid;
        this.advancebilldate = advancebilldate;
    }
    public Advance(long advancebillid, Patient patient, Doctorinfo doctorinfo, Date advancebilldate, BigDecimal advanceamount, BigDecimal totalbill, BigDecimal paid) {
       this.advancebillid = advancebillid;
       this.patient = patient;
       this.doctorinfo = doctorinfo;
       this.advancebilldate = advancebilldate;
       this.advanceamount = advanceamount;
       this.totalbill = totalbill;
       this.paid = paid;
    }

    public Advance(long advancebillid, Patient patient, Doctorinfo doctorinfo, Date advancebilldate, BigDecimal advanceamount, BigDecimal totalbill, BigDecimal paid, BigDecimal reaminingamount, Set<Advancechildbill> advancechildbills) {
       this.advancebillid = advancebillid;
       this.patient = patient;
       this.doctorinfo = doctorinfo;
       this.advancebilldate = advancebilldate;
       this.advanceamount = advanceamount;
       this.totalbill = totalbill;
       this.paid = paid;
       this.reaminingamount = reaminingamount;
       this.advancechildbills = advancechildbills;
    }
   
     @Id 
    
    @Column(name="advancebillid", unique=true, nullable=false)
      @GeneratedValue(generator = "advance_seq")
    public long getAdvancebillid() {
        return this.advancebillid;
    }
    
    public void setAdvancebillid(long advancebillid) {
        this.advancebillid = advancebillid;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="patientid")
    public Patient getPatient() {
        return this.patient;
    }
    
    public void setPatient(Patient patient) {
        this.patient = patient;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="doctorid")
    public Doctorinfo getDoctorinfo() {
        return this.doctorinfo;
    }
    
    public void setDoctorinfo(Doctorinfo doctorinfo) {
        this.doctorinfo = doctorinfo;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="advancebilldate", nullable=false, length=13)
    public Date getAdvancebilldate() {
        return this.advancebilldate;
    }
    
    public void setAdvancebilldate(Date advancebilldate) {
        this.advancebilldate = advancebilldate;
    }
    
    @Column(name="advanceamount", precision=20)
    public BigDecimal getAdvanceamount() {
        return this.advanceamount;
    }
    
    public void setAdvanceamount(BigDecimal advanceamount) {
        this.advanceamount = advanceamount;
    }
    
    @Column(name="totalbill", precision=20)
    public BigDecimal getTotalbill() {
        return this.totalbill;
    }
    
    public void setTotalbill(BigDecimal totalbill) {
        this.totalbill = totalbill;
    }
    
    @Column(name="paid", precision=20)
    public BigDecimal getPaid() {
        return this.paid;
    }
    
    public void setPaid(BigDecimal paid) {
        this.paid = paid;
    }

    @Column(name="reaminingamount", precision=20)
    public BigDecimal getReaminingamount() {
        return this.reaminingamount;
    }

    public void setReaminingamount(BigDecimal reaminingamount) {
        this.reaminingamount = reaminingamount;
    }
@OneToMany(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="advance")
    public Set<Advancechildbill> getAdvancechildbills() {
        return this.advancechildbills;
    }

    public void setAdvancechildbills(Set<Advancechildbill> advancechildbills) {
        this.advancechildbills = advancechildbills;
    }

  




}


